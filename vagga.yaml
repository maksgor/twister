minimum-vagga: 0.8.0

containers:
  base-nodejs:
    environ:
      NODE_PATH: /usr/lib/node_modules
      PROJECT_DEPS: /usr/lib
      BABEL_CACHE_PATH: /work/.babel.json
    setup:
    - !Ubuntu xenial
    - !AptTrust
      keys: [1655A0AB68576280]
    - !UbuntuRepo
      url: https://deb.nodesource.com/node_8.x
      suite: xenial
      components: [main]
    - !Install
      - nodejs
    - !BuildDeps
      - dh-autoreconf
      - libpng-dev
    - !NpmConfig
      install-node: false
    - !EnsureDir /work/node_modules
    - !EnsureDir /usr/lib/node_modules/.cache
    - !NpmDependencies
      package: true
      peer: true
      dev: true
      optional: true

  postgres:
    setup:
    - !Ubuntu xenial
    - !Sh |
        addgroup --system --gid 200 postgres
        adduser --uid 200 --system --home /data --no-create-home \
            --shell /bin/bash --group --gecos "PostgreSQL administrator" \
            postgres
    - !Install [postgresql-9.5]
    - !EnsureDir /data
    environ:
      PG_PORT: 5433
      PG_HOST: 127.0.0.1
      PG_DB: twister
      PGDATA: /data
      PG_BIN: /usr/lib/postgresql/9.5/bin
      PG_USER: postgres
      PG_PASSWORD: postgres
    volumes:
      /data: !Persistent
        name: postgres
        owner-uid: 200
        owner-gid: 200
        init-command: _pg-init
      /run: !Tmpfs
        subdirs:
          postgresql: { mode: 0o777 }

commands:
  _pg-init: !Command
    description: Init postgres database
    container: postgres
    user-id: 200
    group-id: 200
    run: |
      set -ex
      ls -la /data
      $PG_BIN/pg_ctl initdb
      $PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start
      $PG_BIN/createuser -h 127.0.0.1 -p $PG_PORT vagga
      $PG_BIN/createdb -h 127.0.0.1 -p $PG_PORT $PG_DB -O vagga
      $PG_BIN/pg_ctl stop

  postgres: &postgres !Command
    description: Run postgres database
    container: postgres
    user-id: 200
    group-id: 200
    run: |
      trap "$PG_BIN/pg_ctl -w stop; trap - INT; kill -INT $$" INT
      $PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k /tmp' start
      sleep infinity

  run: !Supervise
    description: Run server in development mode
    kill-unresponsive-after: 10
    children:
      postgres: *postgres
      server: !Command
        container: base-nodejs
        run: node src/index.js

  run-inspect: !Supervise
    description: Run server in node-inspect mode
    kill-unresponsive-after: 10
    children:
      postgres: *postgres
      server: !Command
        container: base-nodejs
        run: node --inspect src/index.js

  build-frontend: !Command
    description: Build frontend stuff
    container: base-nodejs
    run: |
      webpack

  lint: !Command
    description: Run eslint check
    container: base-nodejs
    run: |
      npm run lint

  db-migrate: !Command
    description: Migrate db to latest version
    container: base-nodejs
    run: |
      sequelize db:migrate

  db-downgrade: !Command
    description: Revert last migration
    container: base-nodejs
    run: |
      sequelize db:migrate:undo

  db-seeds-apply: !Command
    description: Apply prepared seeders files
    container: base-nodejs
    run: |
      sequelize db:seed:all

  db-seeds-undo: !Command
    description: Remove all seeds
    container: base-nodejs
    run: |
      sequelize db:seed:undo:all
